CREATE TABLE tbl_pais (
    id_pais INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome_pais VARCHAR(50) NOT NULL,
    CONSTRAINT pk_pais PRIMARY KEY (id_pais),
    CONSTRAINT unq_nome_pais UNIQUE (nome_pais)
);

CREATE TABLE tbl_estado (
    id_estado INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome_estado VARCHAR(50) NOT NULL,
    id_pais INTEGER NOT NULL,
    CONSTRAINT pk_estado PRIMARY KEY (id_estado),
    CONSTRAINT unq_nome_estado UNIQUE (nome_estado),
    CONSTRAINT fk_estado_pais FOREIGN KEY (id_pais) REFERENCES tbl_pais(id_pais)
);

CREATE TABLE tbl_cidade (
    id_cidade INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome_cidade VARCHAR(50) NOT NULL,
    id_estado INTEGER NOT NULL,
    CONSTRAINT pk_cidade PRIMARY KEY (id_cidade),
    CONSTRAINT unq_nome_cidade UNIQUE (nome_cidade),
    CONSTRAINT fk_cidade_estado FOREIGN KEY (id_estado) REFERENCES tbl_estado(id_estado)
);

CREATE TABLE tbl_usuario (
    id_usuario INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(80) NOT NULL,
    email VARCHAR(255) NOT NULL, 
    senha VARCHAR(200) NOT NULL,
    CONSTRAINT pk_usuario PRIMARY KEY (id_usuario),
    CONSTRAINT unq_email_usuario UNIQUE (email) 
);

CREATE TABLE tbl_unidade (
    id_unidade INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(80) NOT NULL,
    capacidade_total_litros INTEGER NOT NULL, 
    data_cadastro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_usuario INTEGER NOT NULL,
    CONSTRAINT pk_unidade PRIMARY KEY (id_unidade),
    CONSTRAINT fk_unidade_usuario FOREIGN KEY (id_usuario) REFERENCES tbl_usuario(id_usuario)
);


    CREATE TABLE tbl_endereco (
        id_endereco INTEGER GENERATED BY DEFAULT AS IDENTITY,
        logradouro VARCHAR(50) NOT NULL,
        numero INTEGER NOT NULL,
        complemento VARCHAR(50),
        cep VARCHAR(8) NOT NULL,
        id_cidade INTEGER NOT NULL,
        id_unidade INTEGER NOT NULL,
        CONSTRAINT pk_endereco PRIMARY KEY (id_endereco),
        CONSTRAINT fk_endereco_cidade FOREIGN KEY (id_cidade) REFERENCES tbl_cidade(id_cidade),
        CONSTRAINT fk_endereco_unidade FOREIGN KEY (id_unidade) REFERENCES tbl_unidade(id_unidade)
    );

CREATE TABLE tbl_reservatorio (
    id_reservatorio INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(80) NOT NULL,
    capacidade_total_litros INTEGER NOT NULL,
    data_instalacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_unidade INTEGER NOT NULL,
    CONSTRAINT pk_reservatorio PRIMARY KEY (id_reservatorio),
    CONSTRAINT fk_reservatorio_unidade FOREIGN KEY (id_unidade) REFERENCES tbl_unidade(id_unidade)
);

CREATE TABLE tbl_status_reservatorio (
    id_status_reservatorio INTEGER GENERATED BY DEFAULT AS IDENTITY,
    status VARCHAR(40) NOT NULL,
    CONSTRAINT pk_status_reservatorio PRIMARY KEY (id_status_reservatorio)
);

CREATE TABLE tbl_historico_reservatorio (
    id_historico INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nivel_litros INTEGER NOT NULL,
    data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_reservatorio INTEGER NOT NULL,
    id_status_reservatorio INTEGER NOT NULL,
    CONSTRAINT pk_historico_reservatorio PRIMARY KEY (id_historico),
    CONSTRAINT fk_hist_reservatorio FOREIGN KEY (id_reservatorio) REFERENCES tbl_reservatorio(id_reservatorio),
    CONSTRAINT fk_hist_status FOREIGN KEY (id_status_reservatorio) REFERENCES tbl_status_reservatorio(id_status_reservatorio)
);

-- Dispositivo (esp32) e sensores
CREATE TABLE tbl_dispositivo (
    id_dispositivo INTEGER GENERATED BY DEFAULT AS IDENTITY,
    data_instalacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT pk_dispositivo PRIMARY KEY (id_dispositivo)
);

CREATE TABLE tbl_reservatorio_dispositivo (
    id_reservatorio_dispositivo INTEGER GENERATED BY DEFAULT AS IDENTITY,
    data_instalacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
    data_remocao DATE,    
    id_dispositivo INTEGER NOT NULL,
    id_reservatorio INTEGER NOT NULL,
    CONSTRAINT pk_reservatorio_dispositivo PRIMARY KEY (id_reservatorio_dispositivo),
    CONSTRAINT fk_reservatorio FOREIGN KEY (id_reservatorio) REFERENCES tbl_reservatorio(id_reservatorio),
    CONSTRAINT fk_dispositivo FOREIGN KEY (id_dispositivo) REFERENCES tbl_dispositivo(id_dispositivo)
);

CREATE TABLE tbl_leitura_dispositivo (
    id_leitura INTEGER GENERATED BY DEFAULT AS IDENTITY,
    nivel_pct INTEGER NOT NULL,
    turbidez_ntu INTEGER NOT NULL,
    ph_int DECIMAL(4,2) NOT NULL,
    data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_dispositivo INTEGER NOT NULL,
    CONSTRAINT pk_leitura PRIMARY KEY (id_leitura),
    CONSTRAINT fk_leitura_dispositivo FOREIGN KEY (id_dispositivo) REFERENCES tbl_dispositivo(id_dispositivo)
);

-- Clima e alertas

CREATE TABLE tbl_clima_resumo_sem (
    id_clima_resumo INTEGER GENERATED BY DEFAULT AS IDENTITY,
    data_hora_resumo TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    media_chance_chuva DECIMAL(5,2) NOT NULL,
    media_temperatura_max DECIMAL(5,2) NOT NULL,
    media_temperatura_min DECIMAL(5,2) NOT NULL,
    id_cidade INTEGER NOT NULL,
    CONSTRAINT pk_clima_resumo PRIMARY KEY (id_clima_resumo),
    CONSTRAINT fk_clima_cidade FOREIGN KEY (id_cidade) REFERENCES tbl_cidade(id_cidade)
);

CREATE TABLE tbl_status_alerta (
    id_status_alerta INTEGER GENERATED BY DEFAULT AS IDENTITY,
    status VARCHAR(80) NOT NULL,
    CONSTRAINT pk_status_alerta PRIMARY KEY (id_status_alerta)
);

CREATE TABLE tbl_alerta (
    id_alerta INTEGER GENERATED BY DEFAULT AS IDENTITY,
    mensagem VARCHAR(200) NOT NULL,
    data_hora_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    id_reservatorio INTEGER NOT NULL,
    id_status_alerta INTEGER NOT NULL, 
    CONSTRAINT pk_alerta PRIMARY KEY (id_alerta),
    CONSTRAINT fk_alerta_reservatorio FOREIGN KEY (id_reservatorio) REFERENCES tbl_reservatorio(id_reservatorio),
    CONSTRAINT fk_alerta_status FOREIGN KEY (id_status_alerta) REFERENCES tbl_status_alerta(id_status_alerta)
);